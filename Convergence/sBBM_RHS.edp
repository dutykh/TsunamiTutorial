/*
   Rate of convergence of the sBBM system
   exact solution and the corresponding right hand side
   
   to run this script : FreeFem++ sBBM_rate.edp -ns -v 0

   Copyright (C) 2020 Georges SADAKA and Denys Dutykh

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.
   
   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.
   
   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <https://www.gnu.org/licenses/>.

   -------------------------------------------------------------
   An additional file of the main file for computing the rate of 
   convergence of the sBBM system
   -------------------------------------------------------------
   Author 1: Georges SADAKA, LMRS -- University of Rouen
   Author 2: Denys Dutykh, CNRS -- LAMA, USMB          
   E-mail 1: Georges.SADAKA@univ-rouen.fr                  
   E-mail 2: Denys.Dutykh@univ-smb.fr   
   Web 1:  http://georges-sadaka.fr/ 
   Web 2:  http://www.denys-dutykh.com/
   Blog 2:   http://dutykh.github.io/    
   GitHub 1: https://github.com/GeorgesSadaka/
   GitHub 2: https://github.com/dutykh/  
   -----------------------------------------------------------------------
   Distributed under GNU General Public License      
   --------------------------------------------------
*/

macro Dex(t)(0.1e1 - 0.5e0 * cos(0.2e1 * pi * x / L) * cos(0.2e1 * pi * y / L))//
macro ETAex(t)(0.2e0 * cos(-0.2e1 * pi * x / L + t) * cos(-0.2e1 * pi * y / L + t))//
macro Uex(t)(-0.5e0 * sin(-0.2e1 * pi * x / L + t) * cos(-0.2e1 * pi * y / L + t))//
macro Vex(t)(-0.5e0 * cos(-0.2e1 * pi * x / L + t) * sin(-0.2e1 * pi * y / L + t))//
macro ETAexx(t)(0.4e0 * sin(-0.2e1 * pi * x / L + t) * pi / L * cos(-0.2e1 * pi * y / L + t))//
macro ETAexy(t)(0.4e0 * cos(-0.2e1 * pi * x / L + t) * sin(-0.2e1 * pi * y / L + t) * pi / L)//
macro Uexx(t)(0.10e1 * cos(-0.2e1 * pi * x / L + t) * pi / L * cos(-0.2e1 * pi * y / L + t))//
macro Uexy(t)(-0.10e1 * sin(-0.2e1 * pi * x / L + t) * sin(-0.2e1 * pi * y / L + t) * pi / L)//
macro Vexx(t)(-0.10e1 * sin(-0.2e1 * pi * x / L + t) * sin(-0.2e1 * pi * y / L + t) * pi / L)//
macro Vexy(t)(0.10e1 * cos(-0.2e1 * pi * x / L + t) * pi / L * cos(-0.2e1 * pi * y / L + t))//
macro ETAexxx(t)(-0.8e0 * cos(-0.2e1 * pi * x / L + t) * pi ^ 2 / L ^ 2 * cos(-0.2e1 * pi * y / L + t))//
macro ETAexyy(t)(-0.8e0 * cos(-0.2e1 * pi * x / L + t) * pi ^ 2 / L ^ 2 * cos(-0.2e1 * pi * y / L + t))//
macro Uexxx(t)(0.20e1 * sin(-0.2e1 * pi * x / L + t) * pi ^ 2 / L ^ 2 * cos(-0.2e1 * pi * y / L + t))//
macro Uexyy(t)(0.20e1 * sin(-0.2e1 * pi * x / L + t) * pi ^ 2 / L ^ 2 * cos(-0.2e1 * pi * y / L + t))//
macro Vexxx(t)(0.20e1 * cos(-0.2e1 * pi * x / L + t) * pi ^ 2 / L ^ 2 * sin(-0.2e1 * pi * y / L + t))//
macro  Vexyy(t)(0.20e1 * cos(-0.2e1 * pi * x / L + t) * pi ^ 2 / L ^ 2 * sin(-0.2e1 * pi * y / L + t))//
macro feta(t,te)(-0.5000000000e-1 * (0.20e2 * te * cos((-0.2e1 * pi * x + t * L) / L) * pi * cos((-0.2e1 * pi * y + t * L) / L) * cos(0.2e1 * pi * x / L) * cos(0.2e1 * pi * y / L) - 0.40e2 * A * DX ^ 2 * pi * te * cos((-0.2e1 * pi * x + t * L) / L) * cos((-0.2e1 * pi * y + t * L) / L) + 0.40e2 * A * pi * dx(te) * DX * cos((-0.2e1 * pi * x + t * L) / L) * cos((-0.2e1 * pi * y + t * L) / L) - 0.20e2 * A * pi * dx(te) * DY * sin((-0.2e1 * pi * x + t * L) / L) * sin((-0.2e1 * pi * y + t * L) / L) + 0.60e2 * A * pi * dy(te) * DY * cos((-0.2e1 * pi * x + t * L) / L) * cos((-0.2e1 * pi * y + t * L) / L) - 0.40e2 * A * pi * dy(te) * DX * sin((-0.2e1 * pi * x + t * L) / L) * sin((-0.2e1 * pi * y + t * L) / L) + 0.8e1 * b * pi * cos(0.2e1 * pi * x / L) * cos(0.2e1 * pi * y / L) * cos((-0.2e1 * pi * x + t * L) / L) * cos((-0.2e1 * pi * y + t * L) / L) * dx(te) + 0.8e1 * b * pi * cos(0.2e1 * pi * x / L) * cos(0.2e1 * pi * y / L) * cos((-0.2e1 * pi * x + t * L) / L) * cos((-0.2e1 * pi * y + t * L) / L) * dy(te) - 0.8e1 * b * pi * cos(0.2e1 * pi * x / L) * cos(0.2e1 * pi * y / L) * sin((-0.2e1 * pi * x + t * L) / L) * sin((-0.2e1 * pi * y + t * L) / L) * dx(te) - 0.8e1 * b * pi * cos(0.2e1 * pi * x / L) * cos(0.2e1 * pi * y / L) * sin((-0.2e1 * pi * x + t * L) / L) * sin((-0.2e1 * pi * y + t * L) / L) * dy(te) - 0.2e1 * b * pi * cos(0.2e1 * pi * x / L) ^ 2 * cos(0.2e1 * pi * y / L) ^ 2 * cos((-0.2e1 * pi * x + t * L) / L) * cos((-0.2e1 * pi * y + t * L) / L) * dx(te) - 0.2e1 * b * pi * cos(0.2e1 * pi * x / L) ^ 2 * cos(0.2e1 * pi * y / L) ^ 2 * cos((-0.2e1 * pi * x + t * L) / L) * cos((-0.2e1 * pi * y + t * L) / L) * dy(te) + 0.2e1 * b * pi * cos(0.2e1 * pi * x / L) ^ 2 * cos(0.2e1 * pi * y / L) ^ 2 * sin((-0.2e1 * pi * x + t * L) / L) * sin((-0.2e1 * pi * y + t * L) / L) * dx(te) + 0.2e1 * b * pi * cos(0.2e1 * pi * x / L) ^ 2 * cos(0.2e1 * pi * y / L) ^ 2 * sin((-0.2e1 * pi * x + t * L) / L) * sin((-0.2e1 * pi * y + t * L) / L) * dy(te) - 0.40e2 * A * DX * pi * te * DY * sin((-0.2e1 * pi * x + t * L) / L) * sin((-0.2e1 * pi * y + t * L) / L) + 0.4e1 * te * sin((-0.2e1 * pi * x + t * L) / L) * cos((-0.2e1 * pi * y + t * L) / L) * L + 0.4e1 * te * cos((-0.2e1 * pi * x + t * L) / L) * sin((-0.2e1 * pi * y + t * L) / L) * L - 0.40e2 * te * cos((-0.2e1 * pi * x + t * L) / L) * pi * cos((-0.2e1 * pi * y + t * L) / L) - 0.16e2 * te * cos((-0.2e1 * pi * x + t * L) / L) ^ 2 * cos((-0.2e1 * pi * y + t * L) / L) ^ 2 * pi + 0.10e2 * te * DX * sin((-0.2e1 * pi * x + t * L) / L) * cos((-0.2e1 * pi * y + t * L) / L) * L + 0.10e2 * te * DY * cos((-0.2e1 * pi * x + t * L) / L) * sin((-0.2e1 * pi * y + t * L) / L) * L - 0.8e1 * b * pi * dx(te) * cos((-0.2e1 * pi * x + t * L) / L) * cos((-0.2e1 * pi * y + t * L) / L) - 0.8e1 * b * pi * cos((-0.2e1 * pi * x + t * L) / L) * cos((-0.2e1 * pi * y + t * L) / L) * dy(te) + 0.8e1 * b * pi * sin((-0.2e1 * pi * x + t * L) / L) * sin((-0.2e1 * pi * y + t * L) / L) * dx(te) + 0.8e1 * b * pi * dy(te) * sin((-0.2e1 * pi * x + t * L) / L) * sin((-0.2e1 * pi * y + t * L) / L) + 0.20e2 * A * DX * pi * te * cos(0.2e1 * pi * x / L) * cos(0.2e1 * pi * y / L) * DY * sin((-0.2e1 * pi * x + t * L) / L) * sin((-0.2e1 * pi * y + t * L) / L) + 0.20e2 * A * DX ^ 2 * pi * te * cos(0.2e1 * pi * x / L) * cos(0.2e1 * pi * y / L) * cos((-0.2e1 * pi * x + t * L) / L) * cos((-0.2e1 * pi * y + t * L) / L) - 0.40e2 * A * pi * cos(0.2e1 * pi * x / L) * cos(0.2e1 * pi * y / L) * dx(te) * DX * cos((-0.2e1 * pi * x + t * L) / L) * cos((-0.2e1 * pi * y + t * L) / L) + 0.20e2 * A * pi * cos(0.2e1 * pi * x / L) * cos(0.2e1 * pi * y / L) * dx(te) * DY * sin((-0.2e1 * pi * x + t * L) / L) * sin((-0.2e1 * pi * y + t * L) / L) - 0.60e2 * A * pi * cos(0.2e1 * pi * x / L) * cos(0.2e1 * pi * y / L) * dy(te) * DY * cos((-0.2e1 * pi * x + t * L) / L) * cos((-0.2e1 * pi * y + t * L) / L) + 0.40e2 * A * pi * cos(0.2e1 * pi * x / L) * cos(0.2e1 * pi * y / L) * dy(te) * DX * sin((-0.2e1 * pi * x + t * L) / L) * sin((-0.2e1 * pi * y + t * L) / L) + 0.10e2 * A * pi * cos(0.2e1 * pi * x / L) ^ 2 * cos(0.2e1 * pi * y / L) ^ 2 * dx(te) * DX * cos((-0.2e1 * pi * x + t * L) / L) * cos((-0.2e1 * pi * y + t * L) / L) - 0.5e1 * A * pi * cos(0.2e1 * pi * x / L) ^ 2 * cos(0.2e1 * pi * y / L) ^ 2 * dx(te) * DY * sin((-0.2e1 * pi * x + t * L) / L) * sin((-0.2e1 * pi * y + t * L) / L) + 0.15e2 * A * pi * cos(0.2e1 * pi * x / L) ^ 2 * cos(0.2e1 * pi * y / L) ^ 2 * dy(te) * DY * cos((-0.2e1 * pi * x + t * L) / L) * cos((-0.2e1 * pi * y + t * L) / L) - 0.10e2 * A * pi * cos(0.2e1 * pi * x / L) ^ 2 * cos(0.2e1 * pi * y / L) ^ 2 * dy(te) * DX * sin((-0.2e1 * pi * x + t * L) / L) * sin((-0.2e1 * pi * y + t * L) / L) + 0.4e1 * te * pi * cos((-0.2e1 * pi * y + t * L) / L) ^ 2 + 0.4e1 * te * cos((-0.2e1 * pi * x + t * L) / L) ^ 2 * pi) / L)//
macro fu(t,te)(-0.5000000000e-1 * (0.10e2 * tu * cos((-0.2e1 * pi * x + t * L) / L) * cos((-0.2e1 * pi * y + t * L) / L) * L - 0.10e2 * tu * sin((-0.2e1 * pi * x + t * L) / L) * sin((-0.2e1 * pi * y + t * L) / L) * L - 0.8e1 * tu * gr * sin((-0.2e1 * pi * x + t * L) / L) * pi * cos((-0.2e1 * pi * y + t * L) / L) + 0.20e2 * tu * sin((-0.2e1 * pi * x + t * L) / L) * cos((-0.2e1 * pi * y + t * L) / L) ^ 2 * cos((-0.2e1 * pi * x + t * L) / L) * pi + 0.20e2 * d * pi * sin((-0.2e1 * pi * x + t * L) / L) * cos((-0.2e1 * pi * y + t * L) / L) * dx(tu) + 0.20e2 * d * pi * sin((-0.2e1 * pi * x + t * L) / L) * cos((-0.2e1 * pi * y + t * L) / L) * dy(tu) + 0.20e2 * d * pi * cos((-0.2e1 * pi * x + t * L) / L) * sin((-0.2e1 * pi * y + t * L) / L) * dx(tu) + 0.20e2 * d * pi * dy(tu) * cos((-0.2e1 * pi * x + t * L) / L) * sin((-0.2e1 * pi * y + t * L) / L) - 0.20e2 * d * pi * sin((-0.2e1 * pi * x + t * L) / L) * cos((-0.2e1 * pi * y + t * L) / L) * cos(0.2e1 * pi * x / L) * cos(0.2e1 * pi * y / L) * dx(tu) - 0.20e2 * d * pi * sin((-0.2e1 * pi * x + t * L) / L) * cos((-0.2e1 * pi * y + t * L) / L) * cos(0.2e1 * pi * x / L) * cos(0.2e1 * pi * y / L) * dy(tu) - 0.20e2 * d * pi * cos((-0.2e1 * pi * x + t * L) / L) * sin((-0.2e1 * pi * y + t * L) / L) * cos(0.2e1 * pi * x / L) * cos(0.2e1 * pi * y / L) * dx(tu) - 0.20e2 * d * pi * cos((-0.2e1 * pi * x + t * L) / L) * sin((-0.2e1 * pi * y + t * L) / L) * cos(0.2e1 * pi * x / L) * cos(0.2e1 * pi * y / L) * dy(tu) + 0.5e1 * d * pi * cos(0.2e1 * pi * x / L) ^ 2 * cos(0.2e1 * pi * y / L) ^ 2 * sin((-0.2e1 * pi * x + t * L) / L) * cos((-0.2e1 * pi * y + t * L) / L) * dx(tu) + 0.5e1 * d * pi * cos(0.2e1 * pi * x / L) ^ 2 * cos(0.2e1 * pi * y / L) ^ 2 * sin((-0.2e1 * pi * x + t * L) / L) * cos((-0.2e1 * pi * y + t * L) / L) * dy(tu) + 0.5e1 * d * pi * cos(0.2e1 * pi * x / L) ^ 2 * cos(0.2e1 * pi * y / L) ^ 2 * cos((-0.2e1 * pi * x + t * L) / L) * sin((-0.2e1 * pi * y + t * L) / L) * dx(tu) + 0.5e1 * d * pi * cos(0.2e1 * pi * x / L) ^ 2 * cos(0.2e1 * pi * y / L) ^ 2 * cos((-0.2e1 * pi * x + t * L) / L) * sin((-0.2e1 * pi * y + t * L) / L) * dy(tu) + 0.16e2 * B * gr * pi * tu * sin((-0.2e1 * pi * x + t * L) / L) * cos((-0.2e1 * pi * y + t * L) / L) * DX ^ 2 + 0.8e1 * B * gr * pi * tu * sin((-0.2e1 * pi * x + t * L) / L) * cos((-0.2e1 * pi * y + t * L) / L) * DY ^ 2 + 0.16e2 * B * gr * pi * DX * sin((-0.2e1 * pi * x + t * L) / L) * cos((-0.2e1 * pi * y + t * L) / L) * dx(tu) + 0.8e1 * B * gr * pi * dy(tu) * DY * sin((-0.2e1 * pi * x + t * L) / L) * cos((-0.2e1 * pi * y + t * L) / L) + 0.8e1 * B * gr * pi * dy(tu) * DX * cos((-0.2e1 * pi * x + t * L) / L) * sin((-0.2e1 * pi * y + t * L) / L) + 0.40e2 * d * pi * sin((-0.2e1 * pi * x + t * L) / L) * cos((-0.2e1 * pi * y + t * L) / L) * tu * DX + 0.40e2 * d * pi * sin((-0.2e1 * pi * x + t * L) / L) * cos((-0.2e1 * pi * y + t * L) / L) * tu * DY + 0.40e2 * d * pi * cos((-0.2e1 * pi * x + t * L) / L) * sin((-0.2e1 * pi * y + t * L) / L) * tu * DX + 0.40e2 * d * pi * cos((-0.2e1 * pi * x + t * L) / L) * sin((-0.2e1 * pi * y + t * L) / L) * tu * DY - 0.20e2 * d * pi * cos(0.2e1 * pi * x / L) * cos(0.2e1 * pi * y / L) * sin((-0.2e1 * pi * x + t * L) / L) * cos((-0.2e1 * pi * y + t * L) / L) * tu * DX - 0.20e2 * d * pi * cos(0.2e1 * pi * x / L) * cos(0.2e1 * pi * y / L) * sin((-0.2e1 * pi * x + t * L) / L) * cos((-0.2e1 * pi * y + t * L) / L) * tu * DY - 0.20e2 * d * pi * cos(0.2e1 * pi * x / L) * cos(0.2e1 * pi * y / L) * cos((-0.2e1 * pi * x + t * L) / L) * sin((-0.2e1 * pi * y + t * L) / L) * tu * DX - 0.20e2 * d * pi * cos(0.2e1 * pi * x / L) * cos(0.2e1 * pi * y / L) * cos((-0.2e1 * pi * x + t * L) / L) * sin((-0.2e1 * pi * y + t * L) / L) * tu * DY + 0.8e1 * B * gr * pi * tu * DX * DY * cos((-0.2e1 * pi * x + t * L) / L) * sin((-0.2e1 * pi * y + t * L) / L) - 0.8e1 * B * gr * pi * cos(0.2e1 * pi * x / L) * cos(0.2e1 * pi * y / L) * DX * sin((-0.2e1 * pi * x + t * L) / L) * cos((-0.2e1 * pi * y + t * L) / L) * dx(tu) - 0.4e1 * B * gr * pi * cos(0.2e1 * pi * x / L) * cos(0.2e1 * pi * y / L) * dy(tu) * DY * sin((-0.2e1 * pi * x + t * L) / L) * cos((-0.2e1 * pi * y + t * L) / L) - 0.4e1 * B * gr * pi * cos(0.2e1 * pi * x / L) * cos(0.2e1 * pi * y / L) * dy(tu) * DX * cos((-0.2e1 * pi * x + t * L) / L) * sin((-0.2e1 * pi * y + t * L) / L) - 0.10e2 * tu * sin((-0.2e1 * pi * x + t * L) / L) * cos((-0.2e1 * pi * x + t * L) / L) * pi) / L)//
macro fv(t,te)(-0.5000000000e-1 * (0.10e2 * tv * cos((-0.2e1 * pi * x + t * L) / L) * cos((-0.2e1 * pi * y + t * L) / L) * L - 0.10e2 * tv * sin((-0.2e1 * pi * x + t * L) / L) * sin((-0.2e1 * pi * y + t * L) / L) * L + 0.40e2 * d * pi * sin((-0.2e1 * pi * x + t * L) / L) * cos((-0.2e1 * pi * y + t * L) / L) * tv * DX + 0.40e2 * d * pi * sin((-0.2e1 * pi * x + t * L) / L) * cos((-0.2e1 * pi * y + t * L) / L) * tv * DY + 0.40e2 * d * pi * cos((-0.2e1 * pi * x + t * L) / L) * sin((-0.2e1 * pi * y + t * L) / L) * tv * DX + 0.40e2 * d * pi * cos((-0.2e1 * pi * x + t * L) / L) * sin((-0.2e1 * pi * y + t * L) / L) * tv * DY - 0.20e2 * d * pi * sin((-0.2e1 * pi * x + t * L) / L) * cos((-0.2e1 * pi * y + t * L) / L) * cos(0.2e1 * pi * x / L) * cos(0.2e1 * pi * y / L) * dx(tv) - 0.20e2 * d * pi * sin((-0.2e1 * pi * x + t * L) / L) * cos((-0.2e1 * pi * y + t * L) / L) * cos(0.2e1 * pi * x / L) * cos(0.2e1 * pi * y / L) * dy(tv) - 0.20e2 * d * pi * cos((-0.2e1 * pi * x + t * L) / L) * sin((-0.2e1 * pi * y + t * L) / L) * cos(0.2e1 * pi * x / L) * cos(0.2e1 * pi * y / L) * dx(tv) - 0.20e2 * d * pi * cos((-0.2e1 * pi * x + t * L) / L) * sin((-0.2e1 * pi * y + t * L) / L) * cos(0.2e1 * pi * x / L) * cos(0.2e1 * pi * y / L) * dy(tv) + 0.5e1 * d * pi * cos(0.2e1 * pi * x / L) ^ 2 * cos(0.2e1 * pi * y / L) ^ 2 * sin((-0.2e1 * pi * x + t * L) / L) * cos((-0.2e1 * pi * y + t * L) / L) * dx(tv) + 0.5e1 * d * pi * cos(0.2e1 * pi * x / L) ^ 2 * cos(0.2e1 * pi * y / L) ^ 2 * sin((-0.2e1 * pi * x + t * L) / L) * cos((-0.2e1 * pi * y + t * L) / L) * dy(tv) + 0.5e1 * d * pi * cos(0.2e1 * pi * x / L) ^ 2 * cos(0.2e1 * pi * y / L) ^ 2 * cos((-0.2e1 * pi * x + t * L) / L) * sin((-0.2e1 * pi * y + t * L) / L) * dx(tv) + 0.5e1 * d * pi * cos(0.2e1 * pi * x / L) ^ 2 * cos(0.2e1 * pi * y / L) ^ 2 * cos((-0.2e1 * pi * x + t * L) / L) * sin((-0.2e1 * pi * y + t * L) / L) * dy(tv) + 0.16e2 * B * gr * DY ^ 2 * pi * tv * cos((-0.2e1 * pi * x + t * L) / L) * sin((-0.2e1 * pi * y + t * L) / L) + 0.8e1 * B * gr * pi * DY * sin((-0.2e1 * pi * x + t * L) / L) * cos((-0.2e1 * pi * y + t * L) / L) * dx(tv) + 0.8e1 * B * gr * pi * dy(tv) * DX * sin((-0.2e1 * pi * x + t * L) / L) * cos((-0.2e1 * pi * y + t * L) / L) + 0.16e2 * B * gr * pi * dy(tv) * DY * cos((-0.2e1 * pi * x + t * L) / L) * sin((-0.2e1 * pi * y + t * L) / L) - 0.8e1 * tv * gr * cos((-0.2e1 * pi * x + t * L) / L) * sin((-0.2e1 * pi * y + t * L) / L) * pi + 0.20e2 * tv * cos((-0.2e1 * pi * x + t * L) / L) ^ 2 * sin((-0.2e1 * pi * y + t * L) / L) * pi * cos((-0.2e1 * pi * y + t * L) / L) + 0.20e2 * d * pi * sin((-0.2e1 * pi * x + t * L) / L) * cos((-0.2e1 * pi * y + t * L) / L) * dx(tv) + 0.20e2 * d * pi * dy(tv) * sin((-0.2e1 * pi * x + t * L) / L) * cos((-0.2e1 * pi * y + t * L) / L) + 0.20e2 * d * pi * cos((-0.2e1 * pi * x + t * L) / L) * sin((-0.2e1 * pi * y + t * L) / L) * dx(tv) + 0.20e2 * d * pi * cos((-0.2e1 * pi * x + t * L) / L) * sin((-0.2e1 * pi * y + t * L) / L) * dy(tv) - 0.20e2 * d * pi * cos(0.2e1 * pi * x / L) * cos(0.2e1 * pi * y / L) * sin((-0.2e1 * pi * x + t * L) / L) * cos((-0.2e1 * pi * y + t * L) / L) * tv * DX - 0.20e2 * d * pi * cos(0.2e1 * pi * x / L) * cos(0.2e1 * pi * y / L) * sin((-0.2e1 * pi * x + t * L) / L) * cos((-0.2e1 * pi * y + t * L) / L) * tv * DY - 0.20e2 * d * pi * cos(0.2e1 * pi * x / L) * cos(0.2e1 * pi * y / L) * cos((-0.2e1 * pi * x + t * L) / L) * sin((-0.2e1 * pi * y + t * L) / L) * tv * DX - 0.20e2 * d * pi * cos(0.2e1 * pi * x / L) * cos(0.2e1 * pi * y / L) * cos((-0.2e1 * pi * x + t * L) / L) * sin((-0.2e1 * pi * y + t * L) / L) * tv * DY + 0.16e2 * B * gr * DY * pi * tv * DX * sin((-0.2e1 * pi * x + t * L) / L) * cos((-0.2e1 * pi * y + t * L) / L) - 0.4e1 * B * gr * pi * cos(0.2e1 * pi * x / L) * cos(0.2e1 * pi * y / L) * DY * sin((-0.2e1 * pi * x + t * L) / L) * cos((-0.2e1 * pi * y + t * L) / L) * dx(tv) - 0.4e1 * B * gr * pi * cos(0.2e1 * pi * x / L) * cos(0.2e1 * pi * y / L) * dy(tv) * DX * sin((-0.2e1 * pi * x + t * L) / L) * cos((-0.2e1 * pi * y + t * L) / L) - 0.8e1 * B * gr * pi * cos(0.2e1 * pi * x / L) * cos(0.2e1 * pi * y / L) * dy(tv) * DY * cos((-0.2e1 * pi * x + t * L) / L) * sin((-0.2e1 * pi * y + t * L) / L) - 0.10e2 * tv * cos((-0.2e1 * pi * y + t * L) / L) * sin((-0.2e1 * pi * y + t * L) / L) * pi) / L)//
